#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
"""

import os
import hashlib
from PIL import Image
import requests

def get_file_hash(filepath):
    """–ü–æ–ª—É—á–∏—Ç—å —Ö–µ—à —Ñ–∞–π–ª–∞"""
    with open(filepath, 'rb') as f:
        return hashlib.md5(f.read()).hexdigest()

def get_image_info(filepath):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"""
    try:
        with Image.open(filepath) as img:
            return {
                'size': img.size,
                'mode': img.mode,
                'format': img.format
            }
    except Exception as e:
        return {'error': str(e)}

def check_product_images(sku):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    product_dir = f"static/images/products/{sku}"
    
    if not os.path.exists(product_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ {product_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è {sku}:")
    print("=" * 50)
    
    images = []
    for filename in sorted(os.listdir(product_dir)):
        if filename.lower().endswith(('.jpg', '.jpeg', '.png', '.svg')):
            filepath = os.path.join(product_dir, filename)
            file_hash = get_file_hash(filepath)
            file_size = os.path.getsize(filepath)
            image_info = get_image_info(filepath)
            
            images.append({
                'filename': filename,
                'hash': file_hash,
                'size': file_size,
                'info': image_info
            })
            
            print(f"üì∏ {filename}:")
            print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:,} –±–∞–π—Ç")
            print(f"   –•–µ—à: {file_hash}")
            if 'error' not in image_info:
                print(f"   –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_info['size']}")
                print(f"   –§–æ—Ä–º–∞—Ç: {image_info['format']}")
                print(f"   –†–µ–∂–∏–º: {image_info['mode']}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {image_info['error']}")
            print()
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
    hashes = [img['hash'] for img in images]
    unique_hashes = set(hashes)
    
    if len(unique_hashes) == len(images):
        print("‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã!")
    else:
        print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã:")
        for i, img in enumerate(images):
            if hashes.count(img['hash']) > 1:
                print(f"   {img['filename']} (–¥—É–±–ª–∏–∫–∞—Ç)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üñºÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    products = [
        'APP-001-IPHONE15PR',
        'APP-002-MACBOOKAIR',
        'SON-003-PLAYSTATIO',
        'APP-004-AIRPODSPRO'
    ]
    
    for sku in products:
        check_product_images(sku)
        print()

if __name__ == "__main__":
    main()
